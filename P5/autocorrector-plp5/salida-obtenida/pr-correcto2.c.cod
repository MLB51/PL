; START
; MAIN
; {
; Tipo: int
; i => 
;  dir:0 tp:0 tm:1 

; j => 
;  dir:1 tp:0 tm:1 

; n => 
;  dir:2 tp:0 tm:1 

; Tipo: int
; laberinto[5][5] => 
;  dir:3 tp:3 tm:5 

; Tipo: int
; lon[5][5] => 
;  dir:28 tp:0 tm:1 

; error => 
;  dir:29 tp:0 tm:1 

; salir => 
;  dir:30 tp:0 tm:1 


mov #0 16000; t0 para: n
mov #5 16001
mov #0 16002; t0 para: i
mov #0 16003
mov #0 16004; t0 para: i
; Se calcula la pos total para la Ref
mov 16004 A 
addi #0 
mov A 16004 
mov #0 16005; t0 para: n
; Se calcula la pos total para la Ref
mov 16005 A 
addi #2 
mov A 16005 
; WHILE
; {

mov #0 16006; t0 para: j
mov #0 16007
mov #0 16008; t0 para: j
; Se calcula la pos total para la Ref
mov 16008 A 
addi #1 
mov A 16008 
mov #0 16009; t0 para: n
; Se calcula la pos total para la Ref
mov 16009 A 
addi #2 
mov A 16009 
; WHILE
; {

mov #0 16010; t0 para: laberinto
; Calcula n para array
mov #0 16011; t0 para: i
; Se calcula la pos total para la Ref
mov 16011 A 
addi #0 
mov A 16011 
; Calcula Ti
mov 16010 A
muli #5
addi 16011
mov A 16012
; Calcula n para array
mov #0 16013; t0 para: j
; Se calcula la pos total para la Ref
mov 16013 A 
addi #1 
mov A 16013 
; Calcula Ti
mov 16012 A
muli #5
addi 16013
mov A 16014
mov #0 16015
mov #0 16016; t0 para: j
mov #0 16017; t0 para: j
; Se calcula la pos total para la Ref
mov 16017 A 
addi #1 
mov A 16017 
mov #1 16018
; OPAS
mov 16017 A
addi 0
mov A 16019 
; }
mov #0 16020; t0 para: i
mov #0 16021; t0 para: i
; Se calcula la pos total para la Ref
mov 16021 A 
addi #0 
mov A 16021 
mov #1 16022
; OPAS
mov 16021 A
addi 0
mov A 16023 
; }
mov #0 16024; t0 para: i
mov #0 16025
mov #0 16026; t0 para: i
; Se calcula la pos total para la Ref
mov 16026 A 
addi #0 
mov A 16026 
mov #0 16027; t0 para: n
; Se calcula la pos total para la Ref
mov 16027 A 
addi #2 
mov A 16027 
; WHILE
; {

mov #0 16028; t0 para: laberinto
; Calcula n para array
mov #0 16029; t0 para: i
; Se calcula la pos total para la Ref
mov 16029 A 
addi #0 
mov A 16029 
; Calcula Ti
mov 16028 A
muli #5
addi 16029
mov A 16030
; Calcula n para array
mov #0 16031; t0 para: i
; Se calcula la pos total para la Ref
mov 16031 A 
addi #0 
mov A 16031 
; Calcula Ti
mov 16030 A
muli #5
addi 16031
mov A 16032
mov #1 16033
mov #0 16034; t0 para: i
mov #0 16035; t0 para: i
; Se calcula la pos total para la Ref
mov 16035 A 
addi #0 
mov A 16035 
mov #1 16036
; OPAS
mov 16035 A
addi 0
mov A 16037 
; }
mov #0 16038; t0 para: i
mov #0 16039
mov #0 16040; t0 para: i
; Se calcula la pos total para la Ref
mov 16040 A 
addi #0 
mov A 16040 
mov #0 16041; t0 para: n
; Se calcula la pos total para la Ref
mov 16041 A 
addi #2 
mov A 16041 
; WHILE
; {

mov #0 16042; t0 para: laberinto
; Calcula n para array
mov #0 16043; t0 para: i
; Se calcula la pos total para la Ref
mov 16043 A 
addi #0 
mov A 16043 
; Calcula Ti
mov 16042 A
muli #5
addi 16043
mov A 16044
; Calcula n para array
mov #0 16045
; Calcula Ti
mov 16044 A
muli #5
addi 16045
mov A 16046
mov #1 16047
mov #0 16048; t0 para: i
mov #0 16049; t0 para: i
; Se calcula la pos total para la Ref
mov 16049 A 
addi #0 
mov A 16049 
mov #1 16050
; OPAS
mov 16049 A
addi 0
mov A 16051 
; }
mov #0 16052; t0 para: i
mov #1 16053
mov #0 16054; t0 para: i
; Se calcula la pos total para la Ref
mov 16054 A 
addi #0 
mov A 16054 
mov #0 16055; t0 para: n
; Se calcula la pos total para la Ref
mov 16055 A 
addi #2 
mov A 16055 
; WHILE
; {

mov #0 16056; t0 para: laberinto
; Calcula n para array
mov #0 16057; t0 para: n
; Se calcula la pos total para la Ref
mov 16057 A 
addi #2 
mov A 16057 
mov #1 16058
; OPAS
mov 16057 A
subi 0
mov A 16059 
; Calcula Ti
mov 16056 A
muli #5
addi 16059
mov A 16060
; Calcula n para array
mov #0 16061; t0 para: i
; Se calcula la pos total para la Ref
mov 16061 A 
addi #0 
mov A 16061 
; Calcula Ti
mov 16060 A
muli #5
addi 16061
mov A 16062
mov #1 16063
mov #0 16064; t0 para: i
mov #0 16065; t0 para: i
; Se calcula la pos total para la Ref
mov 16065 A 
addi #0 
mov A 16065 
mov #1 16066
; OPAS
mov 16065 A
addi 0
mov A 16067 
; }
mov #0 16068; t0 para: lon
mov #1 16069
mov #0 16070; t0 para: error
mov #0 16071
mov #0 16072; t0 para: salir
mov #0 16073
mov #0 16074; t0 para: i
mov #0 16075
mov #0 16076; t0 para: j
mov #0 16077
mov #0 16078; t0 para: i
; Se calcula la pos total para la Ref
mov 16078 A 
addi #0 
mov A 16078 
mov 16078 A
wri A
wrl
mov #0 16079; t0 para: j
; Se calcula la pos total para la Ref
mov 16079 A 
addi #1 
mov A 16079 
mov 16079 A
wri A
wrl
mov #0 16080; t0 para: i
; Se calcula la pos total para la Ref
mov 16080 A 
addi #0 
mov A 16080 
mov #0 16081; t0 para: n
; Se calcula la pos total para la Ref
mov 16081 A 
addi #2 
mov A 16081 
mov #0 16082; t0 para: j
; Se calcula la pos total para la Ref
mov 16082 A 
addi #1 
mov A 16082 
mov #0 16083; t0 para: n
; Se calcula la pos total para la Ref
mov 16083 A 
addi #2 
mov A 16083 
; OPMD
mov 16080 A
muli 0
mov A 16084 
mov #0 16085; t0 para: error
; Se calcula la pos total para la Ref
mov 16085 A 
addi #29 
mov A 16085 
mov #0 16086
; OPMD
mov 16084 A
muli 0
mov A 16087 
mov #0 16088; t0 para: salir
; Se calcula la pos total para la Ref
mov 16088 A 
addi #30 
mov A 16088 
mov #0 16089
; OPMD
mov 16087 A
muli 0
mov A 16090 
; WHILE
; {

mov #0 16091; t0 para: laberinto
; Calcula n para array
mov #0 16092; t0 para: i
; Se calcula la pos total para la Ref
mov 16092 A 
addi #0 
mov A 16092 
; Calcula Ti
mov 16091 A
muli #5
addi 16092
mov A 16093
; Calcula n para array
mov #0 16094; t0 para: j
; Se calcula la pos total para la Ref
mov 16094 A 
addi #1 
mov A 16094 
; Calcula Ti
mov 16093 A
muli #5
addi 16094
mov A 16095
; Se calcula la pos total para la Ref
mov 16095 A 
addi #3 
mov A 16095 
; IF
; {
; Tipo: int
; mov => 
;  dir:31 tp:0 tm:1 


mov #0 16096; t0 para: mov
mov #0 16097
mov #0 16098; t0 para: i
; Se calcula la pos total para la Ref
mov 16098 A 
addi #0 
mov A 16098 
mov #0 16099; t0 para: n
; Se calcula la pos total para la Ref
mov 16099 A 
addi #2 
mov A 16099 
mov #1 16100
; OPAS
mov 16099 A
subi 0
mov A 16101 
mov #0 16102; t0 para: j
; Se calcula la pos total para la Ref
mov 16102 A 
addi #1 
mov A 16102 
mov #0 16103; t0 para: n
; Se calcula la pos total para la Ref
mov 16103 A 
addi #2 
mov A 16103 
mov #1 16104
; OPAS
mov 16103 A
subi 0
mov A 16105 
; OPMD
mov 16098 A
muli 0
mov A 16106 
; IF
; {

mov #0 16107; t0 para: laberinto
; Calcula n para array
mov #0 16108; t0 para: i
; Se calcula la pos total para la Ref
mov 16108 A 
addi #0 
mov A 16108 
mov #1 16109
; OPAS
mov 16108 A
addi 0
mov A 16110 
; Calcula Ti
mov 16107 A
muli #5
addi 16110
mov A 16111
; Calcula n para array
mov #0 16112; t0 para: j
; Se calcula la pos total para la Ref
mov 16112 A 
addi #1 
mov A 16112 
mov #1 16113
; OPAS
mov 16112 A
addi 0
mov A 16114 
; Calcula Ti
mov 16111 A
muli #5
addi 16114
mov A 16115
; Se calcula la pos total para la Ref
mov 16115 A 
addi #3 
mov A 16115 
; IF
; {

mov #0 16116; t0 para: i
mov #0 16117; t0 para: i
; Se calcula la pos total para la Ref
mov 16117 A 
addi #0 
mov A 16117 
mov #1 16118
; OPAS
mov 16117 A
addi 0
mov A 16119 
mov #0 16120; t0 para: j
mov #0 16121; t0 para: j
; Se calcula la pos total para la Ref
mov 16121 A 
addi #1 
mov A 16121 
mov #1 16122
; OPAS
mov 16121 A
addi 0
mov A 16123 
mov #0 16124; t0 para: lon
mov #0 16125; t0 para: lon
; Se calcula la pos total para la Ref
mov 16125 A 
addi #28 
mov A 16125 
mov #1 16126
; OPAS
mov 16125 A
addi 0
mov A 16127 
mov #0 16128; t0 para: mov
mov #1 16129
; }
; }
mov #0 16130; t0 para: mov
; Se calcula la pos total para la Ref
mov 16130 A 
addi #31 
mov A 16130 
mov #0 16131
mov #0 16132; t0 para: i
; Se calcula la pos total para la Ref
mov 16132 A 
addi #0 
mov A 16132 
mov #0 16133; t0 para: n
; Se calcula la pos total para la Ref
mov 16133 A 
addi #2 
mov A 16133 
mov #1 16134
; OPAS
mov 16133 A
subi 0
mov A 16135 
; OPMD
mov 16130 A
muli 0
mov A 16136 
; IF
mov #0 16137; t0 para: laberinto
; Calcula n para array
mov #0 16138; t0 para: i
; Se calcula la pos total para la Ref
mov 16138 A 
addi #0 
mov A 16138 
mov #1 16139
; OPAS
mov 16138 A
addi 0
mov A 16140 
; Calcula Ti
mov 16137 A
muli #5
addi 16140
mov A 16141
; Calcula n para array
mov #0 16142; t0 para: j
; Se calcula la pos total para la Ref
mov 16142 A 
addi #1 
mov A 16142 
; Calcula Ti
mov 16141 A
muli #5
addi 16142
mov A 16143
; Se calcula la pos total para la Ref
mov 16143 A 
addi #3 
mov A 16143 
; IF
; {

mov #0 16144; t0 para: i
mov #0 16145; t0 para: i
; Se calcula la pos total para la Ref
mov 16145 A 
addi #0 
mov A 16145 
mov #1 16146
; OPAS
mov 16145 A
addi 0
mov A 16147 
mov #0 16148; t0 para: lon
mov #0 16149; t0 para: lon
; Se calcula la pos total para la Ref
mov 16149 A 
addi #28 
mov A 16149 
mov #1 16150
; OPAS
mov 16149 A
addi 0
mov A 16151 
mov #0 16152; t0 para: mov
mov #1 16153
; }
mov #0 16154; t0 para: mov
; Se calcula la pos total para la Ref
mov 16154 A 
addi #31 
mov A 16154 
mov #0 16155
mov #0 16156; t0 para: j
; Se calcula la pos total para la Ref
mov 16156 A 
addi #1 
mov A 16156 
mov #0 16157; t0 para: n
; Se calcula la pos total para la Ref
mov 16157 A 
addi #2 
mov A 16157 
mov #1 16158
; OPAS
mov 16157 A
subi 0
mov A 16159 
; OPMD
mov 16154 A
muli 0
mov A 16160 
; IF
mov #0 16161; t0 para: laberinto
; Calcula n para array
mov #0 16162; t0 para: i
; Se calcula la pos total para la Ref
mov 16162 A 
addi #0 
mov A 16162 
; Calcula Ti
mov 16161 A
muli #5
addi 16162
mov A 16163
; Calcula n para array
mov #0 16164; t0 para: j
; Se calcula la pos total para la Ref
mov 16164 A 
addi #1 
mov A 16164 
mov #1 16165
; OPAS
mov 16164 A
addi 0
mov A 16166 
; Calcula Ti
mov 16163 A
muli #5
addi 16166
mov A 16167
; Se calcula la pos total para la Ref
mov 16167 A 
addi #3 
mov A 16167 
; IF
; {

mov #0 16168; t0 para: j
mov #0 16169; t0 para: j
; Se calcula la pos total para la Ref
mov 16169 A 
addi #1 
mov A 16169 
mov #1 16170
; OPAS
mov 16169 A
addi 0
mov A 16171 
mov #0 16172; t0 para: lon
mov #0 16173; t0 para: lon
; Se calcula la pos total para la Ref
mov 16173 A 
addi #28 
mov A 16173 
mov #1 16174
; OPAS
mov 16173 A
addi 0
mov A 16175 
mov #0 16176; t0 para: mov
mov #1 16177
; }
mov #0 16178; t0 para: mov
; Se calcula la pos total para la Ref
mov 16178 A 
addi #31 
mov A 16178 
mov #1 16179
; IF
; {

mov #0 16180; t0 para: i
; Se calcula la pos total para la Ref
mov 16180 A 
addi #0 
mov A 16180 
mov 16180 A
wri A
wrl
mov #0 16181; t0 para: j
; Se calcula la pos total para la Ref
mov 16181 A 
addi #1 
mov A 16181 
mov 16181 A
wri A
wrl
; }
; ELSE
; {

mov #0 16182; t0 para: i
; Se calcula la pos total para la Ref
mov 16182 A 
addi #0 
mov A 16182 
mov #0 16183; t0 para: n
; Se calcula la pos total para la Ref
mov 16183 A 
addi #2 
mov A 16183 
mov #1 16184
; OPAS
mov 16183 A
subi 0
mov A 16185 
mov #0 16186; t0 para: j
; Se calcula la pos total para la Ref
mov 16186 A 
addi #1 
mov A 16186 
mov #0 16187; t0 para: n
; Se calcula la pos total para la Ref
mov 16187 A 
addi #2 
mov A 16187 
mov #1 16188
; OPAS
mov 16187 A
subi 0
mov A 16189 
; OPAS
mov 16182 A
addi 0
mov A 16190 
; IF
mov #0 16191; t0 para: error
mov #1 16192
; ELSE
mov #0 16193; t0 para: salir
mov #2 16194
; }
; }
; }
mov #0 16195; t0 para: error
; Se calcula la pos total para la Ref
mov 16195 A 
addi #29 
mov A 16195 
; IF
mov #0 16196; t0 para: lon
mov #0 16197
mov #1 16198
; OPAS
mov 16197 A
subi 0
mov A 16199 
mov #0 16200; t0 para: lon
; Se calcula la pos total para la Ref
mov 16200 A 
addi #28 
mov A 16200 
mov 16200 A
wri A
wrl
mov #0 16201; t0 para: laberinto
; Calcula n para array
mov #1 16202
; Calcula Ti
mov 16201 A
muli #5
addi 16202
mov A 16203
; Calcula n para array
mov #1 16204
; Calcula Ti
mov 16203 A
muli #5
addi 16204
mov A 16205
mov #0 16206
mov #0 16207; t0 para: lon
mov #1 16208
mov #0 16209; t0 para: error
mov #0 16210
mov #0 16211; t0 para: salir
mov #0 16212
mov #0 16213; t0 para: i
mov #0 16214
mov #0 16215; t0 para: j
mov #0 16216
mov #0 16217; t0 para: i
; Se calcula la pos total para la Ref
mov 16217 A 
addi #0 
mov A 16217 
mov 16217 A
wri A
wrl
mov #0 16218; t0 para: j
; Se calcula la pos total para la Ref
mov 16218 A 
addi #1 
mov A 16218 
mov 16218 A
wri A
wrl
mov #0 16219; t0 para: i
; Se calcula la pos total para la Ref
mov 16219 A 
addi #0 
mov A 16219 
mov #0 16220; t0 para: n
; Se calcula la pos total para la Ref
mov 16220 A 
addi #2 
mov A 16220 
mov #0 16221; t0 para: j
; Se calcula la pos total para la Ref
mov 16221 A 
addi #1 
mov A 16221 
mov #0 16222; t0 para: n
; Se calcula la pos total para la Ref
mov 16222 A 
addi #2 
mov A 16222 
; OPMD
mov 16219 A
muli 0
mov A 16223 
mov #0 16224; t0 para: error
; Se calcula la pos total para la Ref
mov 16224 A 
addi #29 
mov A 16224 
mov #0 16225
; OPMD
mov 16223 A
muli 0
mov A 16226 
mov #0 16227; t0 para: salir
; Se calcula la pos total para la Ref
mov 16227 A 
addi #30 
mov A 16227 
mov #0 16228
; OPMD
mov 16226 A
muli 0
mov A 16229 
; WHILE
; {

mov #0 16230; t0 para: laberinto
; Calcula n para array
mov #0 16231; t0 para: i
; Se calcula la pos total para la Ref
mov 16231 A 
addi #0 
mov A 16231 
; Calcula Ti
mov 16230 A
muli #5
addi 16231
mov A 16232
; Calcula n para array
mov #0 16233; t0 para: j
; Se calcula la pos total para la Ref
mov 16233 A 
addi #1 
mov A 16233 
; Calcula Ti
mov 16232 A
muli #5
addi 16233
mov A 16234
; Se calcula la pos total para la Ref
mov 16234 A 
addi #3 
mov A 16234 
; IF
; {
; Tipo: int
; mov => 
;  dir:31 tp:0 tm:1 


mov #0 16235; t0 para: mov
mov #0 16236
mov #0 16237; t0 para: i
; Se calcula la pos total para la Ref
mov 16237 A 
addi #0 
mov A 16237 
mov #0 16238; t0 para: n
; Se calcula la pos total para la Ref
mov 16238 A 
addi #2 
mov A 16238 
mov #1 16239
; OPAS
mov 16238 A
subi 0
mov A 16240 
mov #0 16241; t0 para: j
; Se calcula la pos total para la Ref
mov 16241 A 
addi #1 
mov A 16241 
mov #0 16242; t0 para: n
; Se calcula la pos total para la Ref
mov 16242 A 
addi #2 
mov A 16242 
mov #1 16243
; OPAS
mov 16242 A
subi 0
mov A 16244 
; OPMD
mov 16237 A
muli 0
mov A 16245 
; IF
; {

mov #0 16246; t0 para: laberinto
; Calcula n para array
mov #0 16247; t0 para: i
; Se calcula la pos total para la Ref
mov 16247 A 
addi #0 
mov A 16247 
mov #1 16248
; OPAS
mov 16247 A
addi 0
mov A 16249 
; Calcula Ti
mov 16246 A
muli #5
addi 16249
mov A 16250
; Calcula n para array
mov #0 16251; t0 para: j
; Se calcula la pos total para la Ref
mov 16251 A 
addi #1 
mov A 16251 
mov #1 16252
; OPAS
mov 16251 A
addi 0
mov A 16253 
; Calcula Ti
mov 16250 A
muli #5
addi 16253
mov A 16254
; Se calcula la pos total para la Ref
mov 16254 A 
addi #3 
mov A 16254 
; IF
; {

mov #0 16255; t0 para: i
mov #0 16256; t0 para: i
; Se calcula la pos total para la Ref
mov 16256 A 
addi #0 
mov A 16256 
mov #1 16257
; OPAS
mov 16256 A
addi 0
mov A 16258 
mov #0 16259; t0 para: j
mov #0 16260; t0 para: j
; Se calcula la pos total para la Ref
mov 16260 A 
addi #1 
mov A 16260 
mov #1 16261
; OPAS
mov 16260 A
addi 0
mov A 16262 
mov #0 16263; t0 para: lon
mov #0 16264; t0 para: lon
; Se calcula la pos total para la Ref
mov 16264 A 
addi #28 
mov A 16264 
mov #1 16265
; OPAS
mov 16264 A
addi 0
mov A 16266 
mov #0 16267; t0 para: mov
mov #1 16268
; }
; }
mov #0 16269; t0 para: mov
; Se calcula la pos total para la Ref
mov 16269 A 
addi #31 
mov A 16269 
mov #0 16270
mov #0 16271; t0 para: i
; Se calcula la pos total para la Ref
mov 16271 A 
addi #0 
mov A 16271 
mov #0 16272; t0 para: n
; Se calcula la pos total para la Ref
mov 16272 A 
addi #2 
mov A 16272 
mov #1 16273
; OPAS
mov 16272 A
subi 0
mov A 16274 
; OPMD
mov 16269 A
muli 0
mov A 16275 
; IF
mov #0 16276; t0 para: laberinto
; Calcula n para array
mov #0 16277; t0 para: i
; Se calcula la pos total para la Ref
mov 16277 A 
addi #0 
mov A 16277 
mov #1 16278
; OPAS
mov 16277 A
addi 0
mov A 16279 
; Calcula Ti
mov 16276 A
muli #5
addi 16279
mov A 16280
; Calcula n para array
mov #0 16281; t0 para: j
; Se calcula la pos total para la Ref
mov 16281 A 
addi #1 
mov A 16281 
; Calcula Ti
mov 16280 A
muli #5
addi 16281
mov A 16282
; Se calcula la pos total para la Ref
mov 16282 A 
addi #3 
mov A 16282 
; IF
; {

mov #0 16283; t0 para: i
mov #0 16284; t0 para: i
; Se calcula la pos total para la Ref
mov 16284 A 
addi #0 
mov A 16284 
mov #1 16285
; OPAS
mov 16284 A
addi 0
mov A 16286 
mov #0 16287; t0 para: lon
mov #0 16288; t0 para: lon
; Se calcula la pos total para la Ref
mov 16288 A 
addi #28 
mov A 16288 
mov #1 16289
; OPAS
mov 16288 A
addi 0
mov A 16290 
mov #0 16291; t0 para: mov
mov #1 16292
; }
mov #0 16293; t0 para: mov
; Se calcula la pos total para la Ref
mov 16293 A 
addi #31 
mov A 16293 
mov #0 16294
mov #0 16295; t0 para: j
; Se calcula la pos total para la Ref
mov 16295 A 
addi #1 
mov A 16295 
mov #0 16296; t0 para: n
; Se calcula la pos total para la Ref
mov 16296 A 
addi #2 
mov A 16296 
mov #1 16297
; OPAS
mov 16296 A
subi 0
mov A 16298 
; OPMD
mov 16293 A
muli 0
mov A 16299 
; IF
mov #0 16300; t0 para: laberinto
; Calcula n para array
mov #0 16301; t0 para: i
; Se calcula la pos total para la Ref
mov 16301 A 
addi #0 
mov A 16301 
; Calcula Ti
mov 16300 A
muli #5
addi 16301
mov A 16302
; Calcula n para array
mov #0 16303; t0 para: j
; Se calcula la pos total para la Ref
mov 16303 A 
addi #1 
mov A 16303 
mov #1 16304
; OPAS
mov 16303 A
addi 0
mov A 16305 
; Calcula Ti
mov 16302 A
muli #5
addi 16305
mov A 16306
; Se calcula la pos total para la Ref
mov 16306 A 
addi #3 
mov A 16306 
; IF
; {

mov #0 16307; t0 para: j
mov #0 16308; t0 para: j
; Se calcula la pos total para la Ref
mov 16308 A 
addi #1 
mov A 16308 
mov #1 16309
; OPAS
mov 16308 A
addi 0
mov A 16310 
mov #0 16311; t0 para: lon
mov #0 16312; t0 para: lon
; Se calcula la pos total para la Ref
mov 16312 A 
addi #28 
mov A 16312 
mov #1 16313
; OPAS
mov 16312 A
addi 0
mov A 16314 
mov #0 16315; t0 para: mov
mov #1 16316
; }
mov #0 16317; t0 para: mov
; Se calcula la pos total para la Ref
mov 16317 A 
addi #31 
mov A 16317 
mov #1 16318
; IF
; {

mov #0 16319; t0 para: i
; Se calcula la pos total para la Ref
mov 16319 A 
addi #0 
mov A 16319 
mov 16319 A
wri A
wrl
mov #0 16320; t0 para: j
; Se calcula la pos total para la Ref
mov 16320 A 
addi #1 
mov A 16320 
mov 16320 A
wri A
wrl
; }
; ELSE
; {

mov #0 16321; t0 para: i
; Se calcula la pos total para la Ref
mov 16321 A 
addi #0 
mov A 16321 
mov #0 16322; t0 para: n
; Se calcula la pos total para la Ref
mov 16322 A 
addi #2 
mov A 16322 
mov #1 16323
; OPAS
mov 16322 A
subi 0
mov A 16324 
mov #0 16325; t0 para: j
; Se calcula la pos total para la Ref
mov 16325 A 
addi #1 
mov A 16325 
mov #0 16326; t0 para: n
; Se calcula la pos total para la Ref
mov 16326 A 
addi #2 
mov A 16326 
mov #1 16327
; OPAS
mov 16326 A
subi 0
mov A 16328 
; OPAS
mov 16321 A
addi 0
mov A 16329 
; IF
mov #0 16330; t0 para: error
mov #1 16331
; ELSE
mov #0 16332; t0 para: salir
mov #2 16333
; }
; }
; }
mov #0 16334; t0 para: error
; Se calcula la pos total para la Ref
mov 16334 A 
addi #29 
mov A 16334 
; IF
mov #0 16335; t0 para: lon
mov #0 16336
mov #1 16337
; OPAS
mov 16336 A
subi 0
mov A 16338 
mov #0 16339; t0 para: lon
; Se calcula la pos total para la Ref
mov 16339 A 
addi #28 
mov A 16339 
mov 16339 A
wri A
wrl
; }
halt
