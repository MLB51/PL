; MAIN
; {
; Tipo: int
; i => 
;  dir:0 tp:0 tm:1 
; j => 
;  dir:1 tp:0 tm:1 
; n => 
;  dir:2 tp:0 tm:1 
; Tipo: int
; laberinto[5][5] => 
;  dir:3 tp:3 tm:5 
; Tipo: int
; lon[5][5] => 
;  dir:28 tp:0 tm:1 
; error => 
;  dir:29 tp:0 tm:1 
; salir => 
;  dir:30 tp:0 tm:1 

mov #0 16000; t0 para: n
mov #5 16001
; Se calcula la pos total para la Ref de la asignacion
mov 16000 A 
addi #2 
; Asignacion para n
mov 16001 @A 
mov #0 16002; t0 para: i
mov #0 16003
; Se calcula la pos total para la Ref de la asignacion
mov 16002 A 
addi #0 
; Asignacion para i
mov 16003 @A 
L2 
mov #0 16004; t0 para: i
; Se calcula la pos total para la Ref
mov 16004 A 
addi #0 
mov A 16004 
mov #0 16005; t0 para: n
; Se calcula la pos total para la Ref
mov 16005 A 
addi #2 
mov A 16005 
; ---------------------OPREL
mov 16004 B
mov @B+0 16004 
mov 16005 B
mov @B+0 16005 
mov 16004 A
lssi 16005
mov A 16006 
mov 16006 A
; ---------------------WHILE
jz L3 
; {

mov #0 16007; t0 para: j
mov #0 16008
; Se calcula la pos total para la Ref de la asignacion
mov 16007 A 
addi #1 
; Asignacion para j
mov 16008 @A 
L0 
mov #0 16009; t0 para: j
; Se calcula la pos total para la Ref
mov 16009 A 
addi #1 
mov A 16009 
mov #0 16010; t0 para: n
; Se calcula la pos total para la Ref
mov 16010 A 
addi #2 
mov A 16010 
; ---------------------OPREL
mov 16009 B
mov @B+0 16009 
mov 16010 B
mov @B+0 16010 
mov 16009 A
lssi 16010
mov A 16011 
mov 16011 A
; ---------------------WHILE
jz L1 
; {

mov #0 16012; t0 para: laberinto
; Calcula n para array
mov #0 16013; t0 para: i
; Se calcula la pos total para la Ref
mov 16013 A 
addi #0 
mov A 16013 
; Calcula Ti
mov 16012 A
muli #5
addi 16013
mov A 16014
; Calcula n para array
mov #0 16015; t0 para: j
; Se calcula la pos total para la Ref
mov 16015 A 
addi #1 
mov A 16015 
; Calcula Ti
mov 16014 A
muli #5
addi 16015
mov A 16016
mov #0 16017
; Se calcula la pos total para la Ref de la asignacion
mov 16016 A 
addi #3 
; Asignacion para laberinto
mov 16017 @A 
mov #0 16018; t0 para: j
mov #0 16019; t0 para: j
; Se calcula la pos total para la Ref
mov 16019 A 
addi #1 
mov A 16019 
mov #1 16020
; ---------------------OPAS
mov 16019 B
mov @B+0 16019 
mov 16019 A
addi 16020
mov A 16021 
; Se calcula la pos total para la Ref de la asignacion
mov 16018 A 
addi #1 
; Asignacion para j
mov 16021 @A 
; }
jmp L0 
L1 
mov #0 16022; t0 para: i
mov #0 16023; t0 para: i
; Se calcula la pos total para la Ref
mov 16023 A 
addi #0 
mov A 16023 
mov #1 16024
; ---------------------OPAS
mov 16023 B
mov @B+0 16023 
mov 16023 A
addi 16024
mov A 16025 
; Se calcula la pos total para la Ref de la asignacion
mov 16022 A 
addi #0 
; Asignacion para i
mov 16025 @A 
; }
jmp L2 
L3 
mov #0 16026; t0 para: i
mov #0 16027
; Se calcula la pos total para la Ref de la asignacion
mov 16026 A 
addi #0 
; Asignacion para i
mov 16027 @A 
L4 
mov #0 16028; t0 para: i
; Se calcula la pos total para la Ref
mov 16028 A 
addi #0 
mov A 16028 
mov #0 16029; t0 para: n
; Se calcula la pos total para la Ref
mov 16029 A 
addi #2 
mov A 16029 
; ---------------------OPREL
mov 16028 B
mov @B+0 16028 
mov 16029 B
mov @B+0 16029 
mov 16028 A
lssi 16029
mov A 16030 
mov 16030 A
; ---------------------WHILE
jz L5 
; {

mov #0 16031; t0 para: laberinto
; Calcula n para array
mov #0 16032; t0 para: i
; Se calcula la pos total para la Ref
mov 16032 A 
addi #0 
mov A 16032 
; Calcula Ti
mov 16031 A
muli #5
addi 16032
mov A 16033
; Calcula n para array
mov #0 16034; t0 para: i
; Se calcula la pos total para la Ref
mov 16034 A 
addi #0 
mov A 16034 
; Calcula Ti
mov 16033 A
muli #5
addi 16034
mov A 16035
mov #1 16036
; Se calcula la pos total para la Ref de la asignacion
mov 16035 A 
addi #3 
; Asignacion para laberinto
mov 16036 @A 
mov #0 16037; t0 para: i
mov #0 16038; t0 para: i
; Se calcula la pos total para la Ref
mov 16038 A 
addi #0 
mov A 16038 
mov #1 16039
; ---------------------OPAS
mov 16038 B
mov @B+0 16038 
mov 16038 A
addi 16039
mov A 16040 
; Se calcula la pos total para la Ref de la asignacion
mov 16037 A 
addi #0 
; Asignacion para i
mov 16040 @A 
; }
jmp L4 
L5 
mov #0 16041; t0 para: i
mov #0 16042
; Se calcula la pos total para la Ref de la asignacion
mov 16041 A 
addi #0 
; Asignacion para i
mov 16042 @A 
L6 
mov #0 16043; t0 para: i
; Se calcula la pos total para la Ref
mov 16043 A 
addi #0 
mov A 16043 
mov #0 16044; t0 para: n
; Se calcula la pos total para la Ref
mov 16044 A 
addi #2 
mov A 16044 
; ---------------------OPREL
mov 16043 B
mov @B+0 16043 
mov 16044 B
mov @B+0 16044 
mov 16043 A
lssi 16044
mov A 16045 
mov 16045 A
; ---------------------WHILE
jz L7 
; {

mov #0 16046; t0 para: laberinto
; Calcula n para array
mov #0 16047; t0 para: i
; Se calcula la pos total para la Ref
mov 16047 A 
addi #0 
mov A 16047 
; Calcula Ti
mov 16046 A
muli #5
addi 16047
mov A 16048
; Calcula n para array
mov #0 16049
; Calcula Ti
mov 16048 A
muli #5
addi 16049
mov A 16050
mov #1 16051
; Se calcula la pos total para la Ref de la asignacion
mov 16050 A 
addi #3 
; Asignacion para laberinto
mov 16051 @A 
mov #0 16052; t0 para: i
mov #0 16053; t0 para: i
; Se calcula la pos total para la Ref
mov 16053 A 
addi #0 
mov A 16053 
mov #1 16054
; ---------------------OPAS
mov 16053 B
mov @B+0 16053 
mov 16053 A
addi 16054
mov A 16055 
; Se calcula la pos total para la Ref de la asignacion
mov 16052 A 
addi #0 
; Asignacion para i
mov 16055 @A 
; }
jmp L6 
L7 
mov #0 16056; t0 para: i
mov #1 16057
; Se calcula la pos total para la Ref de la asignacion
mov 16056 A 
addi #0 
; Asignacion para i
mov 16057 @A 
L8 
mov #0 16058; t0 para: i
; Se calcula la pos total para la Ref
mov 16058 A 
addi #0 
mov A 16058 
mov #0 16059; t0 para: n
; Se calcula la pos total para la Ref
mov 16059 A 
addi #2 
mov A 16059 
; ---------------------OPREL
mov 16058 B
mov @B+0 16058 
mov 16059 B
mov @B+0 16059 
mov 16058 A
lssi 16059
mov A 16060 
mov 16060 A
; ---------------------WHILE
jz L9 
; {

mov #0 16061; t0 para: laberinto
; Calcula n para array
mov #0 16062; t0 para: n
; Se calcula la pos total para la Ref
mov 16062 A 
addi #2 
mov A 16062 
mov #1 16063
; ---------------------OPAS
mov 16062 B
mov @B+0 16062 
mov 16062 A
subi 16063
mov A 16064 
; Calcula Ti
mov 16061 A
muli #5
addi 16064
mov A 16065
; Calcula n para array
mov #0 16066; t0 para: i
; Se calcula la pos total para la Ref
mov 16066 A 
addi #0 
mov A 16066 
; Calcula Ti
mov 16065 A
muli #5
addi 16066
mov A 16067
mov #1 16068
; Se calcula la pos total para la Ref de la asignacion
mov 16067 A 
addi #3 
; Asignacion para laberinto
mov 16068 @A 
mov #0 16069; t0 para: i
mov #0 16070; t0 para: i
; Se calcula la pos total para la Ref
mov 16070 A 
addi #0 
mov A 16070 
mov #1 16071
; ---------------------OPAS
mov 16070 B
mov @B+0 16070 
mov 16070 A
addi 16071
mov A 16072 
; Se calcula la pos total para la Ref de la asignacion
mov 16069 A 
addi #0 
; Asignacion para i
mov 16072 @A 
; }
jmp L8 
L9 
mov #0 16073; t0 para: i
mov #0 16074
; Se calcula la pos total para la Ref de la asignacion
mov 16073 A 
addi #0 
; Asignacion para i
mov 16074 @A 
L12 
mov #0 16075; t0 para: i
; Se calcula la pos total para la Ref
mov 16075 A 
addi #0 
mov A 16075 
mov #0 16076; t0 para: n
; Se calcula la pos total para la Ref
mov 16076 A 
addi #2 
mov A 16076 
; ---------------------OPREL
mov 16075 B
mov @B+0 16075 
mov 16076 B
mov @B+0 16076 
mov 16075 A
lssi 16076
mov A 16077 
mov 16077 A
; ---------------------WHILE
jz L13 
; {

mov #0 16078; t0 para: j
mov #0 16079
; Se calcula la pos total para la Ref de la asignacion
mov 16078 A 
addi #1 
; Asignacion para j
mov 16079 @A 
L10 
mov #0 16080; t0 para: j
; Se calcula la pos total para la Ref
mov 16080 A 
addi #1 
mov A 16080 
mov #0 16081; t0 para: n
; Se calcula la pos total para la Ref
mov 16081 A 
addi #2 
mov A 16081 
; ---------------------OPREL
mov 16080 B
mov @B+0 16080 
mov 16081 B
mov @B+0 16081 
mov 16080 A
lssi 16081
mov A 16082 
mov 16082 A
; ---------------------WHILE
jz L11 
; {

mov #0 16083; t0 para: laberinto
; Calcula n para array
mov #0 16084; t0 para: i
; Se calcula la pos total para la Ref
mov 16084 A 
addi #0 
mov A 16084 
; Calcula Ti
mov 16083 A
muli #5
addi 16084
mov A 16085
; Calcula n para array
mov #0 16086; t0 para: j
; Se calcula la pos total para la Ref
mov 16086 A 
addi #1 
mov A 16086 
; Calcula Ti
mov 16085 A
muli #5
addi 16086
mov A 16087
; Se calcula la pos total para la Ref
mov 16087 A 
addi #3 
mov A 16087 
mov 16087 B
mov @B+0 16087 
mov 16087 A
wri A
wrl
mov #0 16088; t0 para: j
mov #0 16089; t0 para: j
; Se calcula la pos total para la Ref
mov 16089 A 
addi #1 
mov A 16089 
mov #1 16090
; ---------------------OPAS
mov 16089 B
mov @B+0 16089 
mov 16089 A
addi 16090
mov A 16091 
; Se calcula la pos total para la Ref de la asignacion
mov 16088 A 
addi #1 
; Asignacion para j
mov 16091 @A 
; }
jmp L10 
L11 
mov #0 16092; t0 para: i
mov #0 16093; t0 para: i
; Se calcula la pos total para la Ref
mov 16093 A 
addi #0 
mov A 16093 
mov #1 16094
; ---------------------OPAS
mov 16093 B
mov @B+0 16093 
mov 16093 A
addi 16094
mov A 16095 
; Se calcula la pos total para la Ref de la asignacion
mov 16092 A 
addi #0 
; Asignacion para i
mov 16095 @A 
; }
jmp L12 
L13 
mov #0 16096; t0 para: lon
mov #1 16097
; Se calcula la pos total para la Ref de la asignacion
mov 16096 A 
addi #28 
; Asignacion para lon
mov 16097 @A 
mov #0 16098; t0 para: error
mov #0 16099
; Se calcula la pos total para la Ref de la asignacion
mov 16098 A 
addi #29 
; Asignacion para error
mov 16099 @A 
mov #0 16100; t0 para: salir
mov #0 16101
; Se calcula la pos total para la Ref de la asignacion
mov 16100 A 
addi #30 
; Asignacion para salir
mov 16101 @A 
mov #0 16102; t0 para: i
mov #0 16103
; Se calcula la pos total para la Ref de la asignacion
mov 16102 A 
addi #0 
; Asignacion para i
mov 16103 @A 
mov #0 16104; t0 para: j
mov #0 16105
; Se calcula la pos total para la Ref de la asignacion
mov 16104 A 
addi #1 
; Asignacion para j
mov 16105 @A 
mov #0 16106; t0 para: i
; Se calcula la pos total para la Ref
mov 16106 A 
addi #0 
mov A 16106 
mov 16106 B
mov @B+0 16106 
mov 16106 A
wri A
wrl
mov #0 16107; t0 para: j
; Se calcula la pos total para la Ref
mov 16107 A 
addi #1 
mov A 16107 
mov 16107 B
mov @B+0 16107 
mov 16107 A
wri A
wrl
mov #0 16108; t0 para: error
; Se calcula la pos total para la Ref
mov 16108 A 
addi #29 
mov A 16108 
mov 16108 B
mov @B+0 16108 
mov 16108 A
; ---------------------IF
jz L14 
mov #0 16109; t0 para: lon
mov #0 16110
mov #1 16111
; ---------------------OPAS
mov 16110 A
subi 16111
mov A 16112 
; Se calcula la pos total para la Ref de la asignacion
mov 16109 A 
addi #28 
; Asignacion para lon
mov 16112 @A 
L14 
mov #0 16113; t0 para: lon
; Se calcula la pos total para la Ref
mov 16113 A 
addi #28 
mov A 16113 
mov 16113 B
mov @B+0 16113 
mov 16113 A
wri A
wrl
mov #0 16114; t0 para: laberinto
; Calcula n para array
mov #1 16115
; Calcula Ti
mov 16114 A
muli #5
addi 16115
mov A 16116
; Calcula n para array
mov #1 16117
; Calcula Ti
mov 16116 A
muli #5
addi 16117
mov A 16118
mov #0 16119
; Se calcula la pos total para la Ref de la asignacion
mov 16118 A 
addi #3 
; Asignacion para laberinto
mov 16119 @A 
mov #0 16120; t0 para: lon
mov #1 16121
; Se calcula la pos total para la Ref de la asignacion
mov 16120 A 
addi #28 
; Asignacion para lon
mov 16121 @A 
mov #0 16122; t0 para: error
mov #0 16123
; Se calcula la pos total para la Ref de la asignacion
mov 16122 A 
addi #29 
; Asignacion para error
mov 16123 @A 
mov #0 16124; t0 para: salir
mov #0 16125
; Se calcula la pos total para la Ref de la asignacion
mov 16124 A 
addi #30 
; Asignacion para salir
mov 16125 @A 
mov #0 16126; t0 para: i
mov #0 16127
; Se calcula la pos total para la Ref de la asignacion
mov 16126 A 
addi #0 
; Asignacion para i
mov 16127 @A 
mov #0 16128; t0 para: j
mov #0 16129
; Se calcula la pos total para la Ref de la asignacion
mov 16128 A 
addi #1 
; Asignacion para j
mov 16129 @A 
mov #0 16130; t0 para: i
; Se calcula la pos total para la Ref
mov 16130 A 
addi #0 
mov A 16130 
mov 16130 B
mov @B+0 16130 
mov 16130 A
wri A
wrl
mov #0 16131; t0 para: j
; Se calcula la pos total para la Ref
mov 16131 A 
addi #1 
mov A 16131 
mov 16131 B
mov @B+0 16131 
mov 16131 A
wri A
wrl
mov #0 16132; t0 para: error
; Se calcula la pos total para la Ref
mov 16132 A 
addi #29 
mov A 16132 
mov 16132 B
mov @B+0 16132 
mov 16132 A
; ---------------------IF
jz L15 
mov #0 16133; t0 para: lon
mov #0 16134
mov #1 16135
; ---------------------OPAS
mov 16134 A
subi 16135
mov A 16136 
; Se calcula la pos total para la Ref de la asignacion
mov 16133 A 
addi #28 
; Asignacion para lon
mov 16136 @A 
L15 
mov #0 16137; t0 para: lon
; Se calcula la pos total para la Ref
mov 16137 A 
addi #28 
mov A 16137 
mov 16137 B
mov @B+0 16137 
mov 16137 A
wri A
wrl
; }

halt

